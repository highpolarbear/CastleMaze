#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\r\n\ \ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\r\n\ \ can\ walk\ around\ some\ scenery.\ That's\ all.\ It\ should\ really\ be\ extended\r\n\ \ to\ make\ it\ more\ interesting\!\r\n\r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\r\n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\ and\ Terry\ Phung\r\n\ @version\ 2016.02.29\r\n\ \r\n\ Assignment\ 2\ -\ Castle\ Maze.\r\n\ Terry\ Phung\r\n\ K1895389\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=void\ playerTakeItem(Command)
comment10.text=\r\n\ Method\ used\ when\ player\ uses\ the\ 'use\ item'\ command,\r\n\ Checks\ if\ Item\ can\ be\ taken\ and\ checks\ if\ player's\ bag\r\n\ has\ weight\ for\ the\ item.\r\n
comment11.params=command
comment11.target=boolean\ processCommand(Command)
comment11.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment12.params=
comment12.target=void\ moveAroundMonster()
comment12.text=\r\n\ Makes\ the\ monsters\ in\ the\ game\ move\ around\ to\ neighbouring\ rooms,\r\n\ Takes\ the\ monster\ in\ a\ room,\ fetches\ the\ neighbouring\ rooms,\r\n\ looks\ at\ their\ exits\ and\ assigns\ the\ possible\ rooms\ to\ an\ arrayList\r\n\ then\ randomly\ select\ an\ item\ from\ this\ arrayList,\r\n\ and\ set\ the\ monster\ to\ that\ location.\r\n
comment13.params=command
comment13.target=void\ fightMonster(Command)
comment13.text=\r\n\ Method\ used\ when\ player\ meets\ a\ monster\ and\ decides\ to\ fight\ it.\r\n\ Checks\ if\ there's\ a\ monster\ in\ the\ room.\ If\ there\ is,\r\n\ the\ input\ must\ start\ with\ action\ 'fight'\ followed\ by\ the\ 'monster\ '\ using\ item\ 'sword'\r\n\ >\ fight\ monster\ sword\r\n\ checks\ the\ input,\ and\ if\ the\ input\ is\ just\ fight\ monster\ player\ will\ simply\ lose\ health\ (not\ using\ a\ sword)\r\n\ if\ conditions\ met\ and\ the\ monster\ is\ hit\ with\ a\ sword\ then\ it\ will\ simply\ die.\r\n\ Also\ checks\ if\ the\ monster\ has\ been\ already\ killed.\r\n
comment14.params=command
comment14.target=void\ useItem(Command)
comment14.text=\r\n\ Method\ used\ when\ player\ is\ trying\ to\ use\ an\ item.\r\n\ Checks\ if\ the\ desired\ item\ is\ in\ bag,\r\n\ then\ checks\ the\ item\ type\ and\ creates\ the\ effect\ of\ the\ item.\r\n
comment15.params=command
comment15.target=void\ readItem(Command)
comment15.text=\r\n\ When\ user\ is\ trying\ to\ read\ a\ description\ of\ an\ item,\ when\ available.\r\n
comment16.params=
comment16.target=void\ monsterAttack()
comment16.text=\r\n\ When\ the\ monster\ attacks\ the\ player.\ It\ deals\ damage\ according\ to\r\n\ how\ much\ damage\ it\ can\ deal,\ which\ is\ set\ when\ creating\ it.\r\n
comment17.params=
comment17.target=void\ printHelp()
comment17.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\r\n\ command\ words.\r\n
comment18.params=command
comment18.target=void\ goRoom(Command)
comment18.text=\r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment19.params=
comment19.target=Room\ randomRoom()
comment19.text=\r\n\ method\ to\ select\ a\ random\ room\ from\ all\ the\ available\ rooms.\r\n
comment2.params=
comment2.target=void\ createItems()
comment2.text=\r\n\ Creates\ all\ the\ existing\ types\ of\ items\ in\ the\ map.\r\n
comment20.params=command
comment20.target=void\ goBack(Command)
comment20.text=\r\n\ Method\ called\ when\ user\ wants\ to\ go\ back\ to\ previous\ room.\r\n\ Checks\ if\ previous\ room\ is\ available\ before\ proceeding.\r\n
comment21.params=command
comment21.target=boolean\ quit(Command)
comment21.text=\r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment3.params=
comment3.target=void\ createMonsters()
comment3.text=\r\n\ Creates\ all\ the\ existing\ monsters\ of\ type\ Monster\ in\ the\ game.\r\n
comment4.params=
comment4.target=void\ createRooms()
comment4.text=\r\n\ Create\ all\ the\ rooms,\ link\ their\ exits\ together,\ and\ add\ content\ to\ the\ rooms.\r\n
comment5.params=
comment5.target=void\ play()
comment5.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment6.params=
comment6.target=void\ printWelcome()
comment6.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment7.params=
comment7.target=void\ printGame()
comment7.text=\r\n\ Print\ out\ the\ game\ status\ \:\r\n\ The\ room\ the\ player\ is\ in,\ the\ items\ there\ are\ in\ the\ room\ \r\n\ and\ if\ there's\ a\ monster,\ prints\ out\ a\ monster.\r\n
comment8.params=
comment8.target=void\ printPlayerStatus()
comment8.text=\r\n\ Print\ out\ player\ status\ \:\ his\ health\ points,\ bag\ contents\ and\ the\ bag's\ weight.\r\n
comment9.params=
comment9.target=void\ checkPlayerAlive()
comment9.text=\r\n\ check\ if\ player's\ health\ is\ above\ 0,\ if\ it\ isn't\ then\ the\ player\ is\ \r\n\ dead\ and\ the\ game\ ends,\ by\ assigning\ true\ or\ false\ to\ variable\ alive.\r\n
numComments=22
